import type { ${operationName}, ${operationName}Variables  } from 'types/graphql'

import type {
  CellFailureProps,
  CellLoadingProps,
  CellSuccessProps,
  TypedDocumentNode,
} from '@redwoodjs/web'

export const QUERY: TypedDocumentNode<
  ${operationName},
  ${operationName}Variables
> = gql`
  query ${operationName} {
    ${camelName} {
      ${idName}
    }
  }
`

export const Loading: React.FC<
  CellLoadingProps<<${operationName}Variables>
> = () => <div>Loading...</div>

export const Empty: React.FC<
  CellSuccessProps<${operationName}Variables>
> = () => <div>Empty</div>

export const Failure: React.FC<
  CellFailureProps<${operationName}Variables>
> = ({ error }) => (
  <div style={{ color: 'red' }}>Error: {error?.message}</div>
)

export const Success: React.FC<
  CellSuccessProps<${operationName}, ${operationName}Variables>
> = ({ ${camelName} }) => {
  return (
    <ul>
      {${camelName}.map((item) => {
        return <li key={item.${idName}}>{JSON.stringify(item)}</li>
      })}
    </ul>
  )
}
